//In the name of ALLAH
 
#include<bits/stdc++.h>
using namespace std;
 

//  5
// 3 2 7 4 1


void merge( vector<int>&v, int low, int mid, int high ){

    //two variables to act as a pointer
    int left = low, right = mid+1;

    vector<int> temp;
    while( left <= mid && right <= high ){
        if( v[left] <= v[right]){
            temp.push_back( v[left] );
            left++;
        }
        else{
            temp.push_back( v[right] );
            right++;
        }
    }

    // if there is any elements left in the left array(hypothetical)
    while( left <= mid ){
        temp.push_back( v[left] );
        left++;
    }

    // if there is any elements left in the right array(hypothetical)
    while( right <= high ){
        temp.push_back( v[right] );
        right++;
    }

    // to store the values in the original array after sorting
    for( int i = low; i <= high; i++ ){
        v[i] = temp[i - low]; // i - low is used to get the temp arrays index properly
                              // from 0 index. otherwise we might get different index 
                              // due to low value.
    }
    //temp.clear();
}

void mergesort( vector<int>&v, int low, int high ){
    
    //base case
    if( low >= high ){
        return;
    }

    int mid = ( low + high ) / 2;

    mergesort( v, low, mid );
    mergesort( v, mid+1, high );
    merge( v, low, mid, high );

}


int main()
{
    optimize();

    int n, temp;
    cin >> n;
    vector<int>v;

    for( int i = 0; i < n; i++ ){
        cin >> temp;
        v.push_back(temp);
    }

    mergesort( v, 0, n-1 );

    for( auto i : v ){
        cout << i << " ";
    }
    cout << endl;

 
    return 0;
}

